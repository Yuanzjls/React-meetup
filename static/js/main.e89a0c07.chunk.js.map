{"version":3,"sources":["features/constants/DateFormat.js","features/event/eventSlice.js","Components/Calendarx.jsx","app/fetchEvent.js","features/constants/Url.js","features/functions/IconText.js","Components/EventDetail.jsx","Components/Event.jsx","Components/MapCard.jsx","App.js","app/store.js","reportWebVitals.js","index.js"],"names":["format","eventSlice","createSlice","name","initialState","events","date","moment","filterByDateEnable","eventDetail","reducers","setEvents","state","action","payload","setDate","setFilterByDateEnable","setEventDetail","actions","Calendarx","useSelector","event","Dispatch","useDispatch","className","align","checked","onChange","value","fullscreen","onSelect","fetchEvent","id","dispatch","url","axios","get","then","res","data","catch","error","console","IconText","icon","text","React","createElement","EventDetail","useParams","gridLeft","width","textAlign","useEffect","rate","reviews","reduce","prev","cur","length","title","style","fontSize","borderRightWidth","padding","category","StarOutlined","Grid","hoverable","src","picture_url","alt","description","host","profile_picture_url","first_name","last_name","size","attendees","map","ele","placement","Event","listData","filter","element","commentCount","event_reviews","stars","accumulator","currentValue","avatar","content","pic","itemLayout","pagination","page","pageSize","dataSource","renderItem","item","Item","MessageOutlined","extra","Meta","to","Marker","display","flexDirection","alignItems","HomeOutlined","Text","MapCard","log","justify","city","height","bootstrapURLKeys","key","process","defaultCenter","lat","parseFloat","lng","long","defaultZoom","address","type","Header","Layout","Sider","Content","Footer","App","useState","collapsed","setCollapsed","toggle","trigger","collapsible","theme","mode","defaultSelectedKeys","VideoCameraOutlined","UserOutlined","UploadOutlined","MenuUnfoldOutlined","onClick","MenuFoldOutlined","marginRight","margin","minHeight","path","span","configureStore","reducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e89a0c07.chunk.js","sourcesContent":["const format = \"YYYY-MM-DD\";\r\n\r\nexport { format };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\nimport { format } from \"../constants/DateFormat\";\r\nexport const eventSlice = createSlice({\r\n  name: \"event\",\r\n  initialState: {\r\n    events: null,\r\n    date: moment().format(format),\r\n    filterByDateEnable: false,\r\n    eventDetail: null,\r\n  },\r\n  reducers: {\r\n    setEvents: (state, action) => {\r\n      state.events = action.payload;\r\n    },\r\n    setDate: (state, action) => {\r\n      state.date = action.payload;\r\n    },\r\n    setFilterByDateEnable: (state, action) => {\r\n      state.filterByDateEnable = action.payload;\r\n    },\r\n    setEventDetail: (state, action) => {\r\n      state.eventDetail = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setEvents,\r\n  setDate,\r\n  setFilterByDateEnable,\r\n  setEventDetail,\r\n} = eventSlice.actions;\r\n\r\nexport default eventSlice.reducer;\r\n","import { Calendar, Switch } from \"antd\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setDate, setFilterByDateEnable } from \"../features/event/eventSlice\"\r\nimport moment from 'moment';\r\nimport { format } from \"../features/constants/DateFormat\"\r\n\r\n\r\n\r\nexport default function Calendarx() {\r\n\r\n    const date = useSelector((state) => state.event.date);\r\n    const filterByDateEnable = useSelector(state => state.event.filterByDateEnable);\r\n    const Dispatch = useDispatch();\r\n    function selectDate(value) {\r\n        Dispatch(setDate(value.format(format)));\r\n    }\r\n\r\n\r\n    return <div className=\"site-calendar-demo-card\" align=\"center\">\r\n        <span>Filter by date : </span><Switch checked={filterByDateEnable} onChange={(value) => Dispatch(setFilterByDateEnable(value))} />\r\n        <Calendar\r\n            value={moment(date, format)}\r\n            fullscreen={false}\r\n            onSelect={selectDate}\r\n        />\r\n    </div>\r\n}","import axios from \"axios\";\r\nimport { urlBase } from \"../features/constants/Url\";\r\n\r\nexport const fetchEvent = (id, action) => (dispatch) => {\r\n  const url = `${urlBase}${id}`;\r\n\r\n  axios\r\n    .get(url)\r\n    .then((res) => dispatch(action(res.data)))\r\n    .catch((error) => console.error(\"Error: \", error));\r\n};\r\n","const urlBase = \"https://dk-react-backend.herokuapp.com/events/\";\r\nexport { urlBase };\r\n","import { Space } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport const IconText = ({ icon, text }) => (\r\n  <Space>\r\n    {React.createElement(icon)}\r\n    {text}\r\n  </Space>\r\n);\r\n","import { useEffect } from \"react\"\r\nimport { useParams } from \"react-router\";\r\nimport { fetchEvent } from \"../app/fetchEvent\"\r\nimport { setEventDetail } from \"../features/event/eventSlice\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Card, Row, Col, Avatar, Tooltip, Space } from \"antd\";\r\nimport { IconText } from \"../features/functions/IconText\";\r\nimport { StarOutlined } from \"@ant-design/icons\";\r\nexport default function EventDetail() {\r\n\r\n    const { id } = useParams();\r\n    const eventDetail = useSelector(state => state.event.eventDetail);\r\n    const dispatch = useDispatch();\r\n\r\n    const gridCenter = {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n    };\r\n    const gridLeft = {\r\n        width: '100%',\r\n        textAlign: 'left',\r\n    };\r\n    useEffect(() => dispatch(fetchEvent(id, setEventDetail)),\r\n        []);\r\n\r\n    if (eventDetail === null) {\r\n        return <div>Hello</div>\r\n    }\r\n  \r\n    const rate = eventDetail.reviews === null ? \"NaN\" : eventDetail.reviews.reduce((prev, cur) => prev + cur.rate, 0) / eventDetail.reviews.length;\r\n\r\n\r\n    return <Card title={<div style={{\r\n        fontSize: '18px'\r\n    }}>\r\n        {eventDetail.title}\r\n    </div >} style={{ borderRightWidth: \"24px\" }}>\r\n        <Row align=\"space-between\" style={{ padding: '0 24px' }}>\r\n            <Col>\r\n                Category: {eventDetail.category}\r\n            </Col>\r\n            <Col>\r\n                <IconText icon={StarOutlined} text={rate}></IconText>\r\n            </Col>\r\n        </Row>\r\n        <Card.Grid style={gridCenter} hoverable={false}>\r\n            <img src={eventDetail.picture_url} alt=\"Event_image\"></img>\r\n        </Card.Grid>\r\n        <Card.Grid style={gridLeft} hoverable={false}>Description: {eventDetail.description}</Card.Grid>\r\n        <Card.Grid style={gridLeft} hoverable={false}>\r\n            <Avatar src={eventDetail.host.profile_picture_url} />\r\n            <span style={{ fontSize: '15px' }}>&nbsp;&nbsp; Hostname: {eventDetail.host.first_name} {eventDetail.host.last_name}</span>\r\n        </Card.Grid>\r\n        <Card.Grid style={gridLeft} hoverable={false}>\r\n            <span style={{ fontSize: '15px' }}>Who are coming:</span><br></br>\r\n            <Space size={20}>{eventDetail.attendees === null ? \"No body will come\" : eventDetail.attendees.map(ele => <Tooltip title={`id: ${ele.id}`} placement=\"top\" key={ele.id}><Avatar src={ele.profile_picture_url} /></Tooltip>)} </Space>\r\n        </Card.Grid>\r\n    </Card >;\r\n}","import \"antd/dist/antd.css\";\r\nimport { List, Avatar, Space } from \"antd\";\r\nimport { MessageOutlined, StarOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setEvents } from \"../features/event/eventSlice\";\r\nimport { format } from \"../features/constants/DateFormat\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport { fetchEvent } from \"../app/fetchEvent\"\r\nimport { IconText } from \"../features/functions/IconText\"\r\n\r\nexport default function Event() {\r\n\r\n  const events = useSelector(state => state.event.events);\r\n  const date = useSelector(state => state.event.date)\r\n  const filterByDateEnable = useSelector(state => state.event.filterByDateEnable);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEvent('', setEvents));\r\n  }, [])\r\n\r\n\r\n  if (events === null) {\r\n    return <div></div>\r\n  }\r\n\r\n  // console.log(events.map(event => ({ event_reviews: event.event_reviews, id: event.id })));\r\n  const listData = events.filter(element => filterByDateEnable ? moment(element.date).format(format) === date : true).map(data => {\r\n\r\n    const commentCount = data.event_reviews === null ? 0 : data.event_reviews.length\r\n    const stars = data.event_reviews === null ? 0 : data.event_reviews.reduce((accumulator, currentValue) => accumulator + currentValue.rate, 0);\r\n\r\n    return {\r\n      title: data.title, avatar: data.host.profile_picture_url,\r\n      description: data.description, content: \"\",\r\n      pic: data.picture_url, commentCount: commentCount,\r\n      stars: stars, id: data.id\r\n    };\r\n  });\r\n\r\n  return (\r\n    <List\r\n      itemLayout=\"vertical\"\r\n      size=\"large\"\r\n      pagination={{\r\n        onChange: page => {\r\n\r\n        },\r\n        pageSize: 3,\r\n      }}\r\n      dataSource={listData}\r\n\r\n      renderItem={item => (\r\n        <List.Item\r\n          key={item.title}\r\n          actions={[\r\n            <IconText icon={StarOutlined} text={'2'} key=\"list-vertical-star-o\" />,\r\n            <IconText icon={MessageOutlined} text={item.commentCount} key=\"list-vertical-message\" />,\r\n          ]}\r\n          extra={\r\n            <img\r\n              width={272}\r\n              alt=\"logo\"\r\n              src={item.pic}\r\n            />\r\n          }\r\n        >\r\n          <List.Item.Meta\r\n            avatar={<Avatar src={item.avatar} />}\r\n            title={<Link to={`/event/${item.id}`}>{item.title}</Link>}\r\n            description={item.description}\r\n          />\r\n          {item.content}\r\n        </List.Item>\r\n      )}\r\n    />)\r\n\r\n}\r\n","import { Card, Row, Col, Button, Typography } from \"antd\"\r\nimport GoogleMapReact from 'google-map-react';\r\nimport moment from 'moment';\r\nimport { useSelector } from \"react-redux\";\r\nimport { compose, withProps } from \"recompose\"\r\nimport EventDetail from \"./EventDetail\";\r\nimport {HomeOutlined} from '@ant-design/icons';\r\nconst format = \"YYYY-MM-DD HH:mm\";\r\n\r\n\r\nconst Marker = ({ text }) => <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}}>    \r\n    <HomeOutlined/>\r\n    <Typography.Text>{text}</Typography.Text>\r\n</div>;\r\n\r\nexport default function MapCard() {\r\n\r\n    const eventDetail = useSelector(state => state.event.eventDetail);\r\n\r\n    \r\n    if (eventDetail === null) {\r\n        return <></>\r\n    }\r\n    console.log(eventDetail)\r\n    return <Card>\r\n        <Row justify=\"space-between\">\r\n            <Col>\r\n                <p>Date & Time</p>\r\n            </Col>\r\n            <Col>\r\n                <p>{moment(eventDetail.date).format(format)}</p>\r\n            </Col>\r\n        </Row>\r\n        <Row justify=\"space-between\">\r\n            <Col>\r\n                <p>City:</p>\r\n            </Col>\r\n            <Col>\r\n                <p>{eventDetail.city}</p>\r\n            </Col>\r\n        </Row>\r\n        <div style={{ height: '33vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_KEY }}\r\n          defaultCenter={{lat: parseFloat(eventDetail.lat), lng:parseFloat(eventDetail.long)}}\r\n          defaultZoom={8}\r\n        >\r\n          <Marker\r\n            lat={parseFloat(eventDetail.lat)}\r\n            lng={parseFloat(eventDetail.long)}\r\n            text={eventDetail.address}\r\n          />\r\n        </GoogleMapReact>\r\n        </div>\r\n        <br></br>\r\n        <Button type=\"primary\" style={{ width: '100%' }}>Attend</Button>\r\n    </Card>\r\n}","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport Calendarx from \"./Components/Calendarx\";\r\nimport { Layout, Menu, Button, Row, Col, Space } from \"antd\";\r\nimport EventDetail from \"./Components/EventDetail\";\r\nimport Event from \"./Components/Event\";\r\nimport MapCard from \"./Components/MapCard\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { Header, Sider, Content, Footer } = Layout;\r\n\r\nfunction App() {\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  const toggle = () => setCollapsed((collapsed) => !collapsed);\r\n\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <Sider trigger={null} collapsible collapsed={collapsed}>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item key=\"1\" icon={<VideoCameraOutlined />}>\r\n              <Link to=\"/event\">Event</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n              <Link to=\"/people\">People</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n              <span>Profile</span>\r\n              <Link to=\"/profile\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n            <Row align=\"space-between\">\r\n              <Col>\r\n                {collapsed ? (\r\n                  <MenuUnfoldOutlined className=\"trigger\" onClick={toggle} />\r\n                ) : (\r\n                  <MenuFoldOutlined className=\"trigger\" onClick={toggle} />\r\n                )}\r\n              </Col>\r\n              <Col style={{ marginRight: 20 }}>\r\n                <Space>\r\n                  <Button>Login</Button>\r\n                  <Button type=\"primary\">Sign up</Button>\r\n                </Space>\r\n              </Col>\r\n            </Row>\r\n          </Header>\r\n          <Content\r\n            className=\"site-layout-background\"\r\n            style={{\r\n              margin: \"24px 16px\",\r\n              padding: 24,\r\n              minHeight: 900,\r\n            }}\r\n          >\r\n            <Switch>\r\n              <Route path=\"/event/:id\">\r\n                <Row>\r\n                  <Col span={14}>\r\n                    <EventDetail />\r\n                  </Col>\r\n                  <Col span={10}>\r\n                    <MapCard />\r\n                  </Col>\r\n                </Row>\r\n              </Route>\r\n              <Route path=\"/people\">People</Route>\r\n              <Route path=\"/profile\">Profile</Route>\r\n\r\n              <Route path=\"/\">\r\n                <Row>\r\n                  <Col span={14}>\r\n                    <Event />\r\n                  </Col>\r\n                  <Col span={10}>\r\n                    <Calendarx />\r\n                  </Col>\r\n                </Row>\r\n              </Route>\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Meetup app ©2021 Created by Yuan Zhou\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport eventSlice from \"../features/event/eventSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    event: eventSlice,\r\n  },\r\n});\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}