{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Sider","Content","App","useState","collapsed","setCollapsed","trigger","collapsible","className","theme","mode","defaultSelectedKeys","Item","icon","VideoCameraOutlined","UserOutlined","UploadOutlined","style","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","margin","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAYOA,EAA0BC,IAA1BD,OAAQE,EAAkBD,IAAlBC,MAAOC,EAAWF,IAAXE,QAiDPC,MA9Cf,WAAgB,IAAD,EAEqBC,oBAAS,GAF9B,mBAENC,EAFM,KAEKC,EAFL,KASb,OACE,eAAC,IAAD,WACE,eAACL,EAAD,CAAOM,QAAS,KAAMC,aAAW,EAACH,UAAWA,EAA7C,UACE,qBAAKI,UAAU,SACf,eAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,KAAvD,UACE,cAAC,IAAKC,KAAN,CAAmBC,KAAM,cAACC,EAAA,EAAD,IAAzB,kBAAe,KAGf,cAAC,IAAKF,KAAN,CAAmBC,KAAM,cAACE,EAAA,EAAD,IAAzB,mBAAe,KAGf,cAAC,IAAKH,KAAN,CAAmBC,KAAM,cAACG,EAAA,EAAD,IAAzB,oBAAe,WAKnB,eAAC,IAAD,CAAQR,UAAU,cAAlB,UACE,cAACV,EAAD,CAAQU,UAAU,yBAAyBS,MAAO,CAACC,QAAQ,GAA3D,SACCC,IAAMC,cAAchB,EAAYiB,IAAqBC,IAAkB,CAClEd,UAAW,UACXe,QAzBG,kBACblB,GAAa,SAAAD,GAAS,OAAGA,UA2BrB,cAACH,EAAD,CACEO,UAAU,yBACVS,MAAO,CACLO,OAAQ,YACRN,QAAS,GACTO,UAAW,KALf,4BCnCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cc2efce5.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { Layout, Menu } from 'antd';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst {Header, Sider, Content} = Layout;\r\n\r\n\r\nfunction App() {\r\n\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  const toggle = () =>\r\n    setCollapsed(collapsed=>!collapsed);\r\n  \r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <Sider trigger={null} collapsible collapsed={collapsed}>\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n          <Menu.Item key=\"1\" icon={<VideoCameraOutlined />}>\r\n            Event\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n            People\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n            Profile\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header className=\"site-layout-background\" style={{padding:0}}>\r\n        {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n              className: 'trigger',\r\n              onClick: toggle,\r\n            })}\r\n        </Header>\r\n        <Content\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            margin: '24px 16px',\r\n            padding: 24,\r\n            minHeight: 1000,\r\n          }}>\r\n            Content\r\n          </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}